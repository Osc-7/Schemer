{
    // 给你的开发容器起一个名字
    "name": "Schemer Dev",
    // 配置如何构建环境
    "build": {
        "dockerfile": "Dockerfile"
    },
    // 容器启动参数
    "runArgs": [
        // 关键修复：手动将 host.docker.internal 指向 Docker 的网关
        // 解决容器内 DNS 解析失败导致的网络问题
        "--add-host=host.docker.internal:host-gateway",
        // 设置容器使用宿主机的代理
        "--env",
        "HTTP_PROXY=http://host.docker.internal:7890",
        "--env",
        "HTTPS_PROXY=http://host.docker.internal:7890"
    ],
    // 容器内 VS Code 的行为定制
    "customizations": {
        "vscode": {
            "extensions": [
                // C/C++ 开发相关插件
                "ms-vscode.cpptools-extension-pack",
                // Git 可视化增强工具
                "eamodio.gitlens",
                // GitHub 官方插件
                "GitHub.vscode-pull-request-github",
                "ms-vscode.git"
            ],
            "settings": {
                "terminal.integrated.shell.linux": "/bin/bash",
                "git.enabled": true,
                "scm.providers.visible": 1
            }
        }
    },
    // 挂载主机 Git 和 SSH 设置，方便识别 GitHub 用户
    // 确保容器内的用户（默认为 root）能访问到这些配置
    "mounts": [
        "source=${env:HOME}/.gitconfig,target=/root/.gitconfig,type=bind,consistency=cached",
        "source=${env:HOME}/.ssh,target=/root/.ssh,type=bind,consistency=cached"
    ],
    // // （可选）如果挂载后仍然有问题，可以尝试用 postCreateCommand 设置权限
    // // "postCreateCommand": "chmod 700 /root/.ssh && chmod 600 /root/.ssh/id_rsa",
    "remoteEnv": {
        "GIT_AUTHOR_NAME": "${localEnv:GIT_AUTHOR_NAME}",
        "GIT_AUTHOR_EMAIL": "${localEnv:GIT_AUTHOR_EMAIL}",
        "GIT_COMMITTER_NAME": "${localEnv:GIT_COMMITTER_NAME}",
        "GIT_COMMITTER_EMAIL": "${localEnv:GIT_COMMITTER_EMAIL}"
    }
    // 如果 Dockerfile 使用非 root 用户，需要修改挂载路径和 remoteUser
    // "remoteUser": "vscode"
}